% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_info.R
\name{info}
\alias{info}
\title{Create an Info object}
\usage{
info(
  col_names = character(),
  col_types = "misc",
  col_info = NULL,
  device_type = NULL,
  device_model = NULL,
  device_serial = NULL,
  device_site = NULL,
  device_info = NULL,
  subj_id = NULL,
  subj_sex = NULL,
  subj_age = NULL,
  subj_height = NULL,
  subj_weight = NULL,
  subj_info = NULL,
  desc = NULL,
  meas_date = NULL,
  meas_id = NULL,
  meas_start = NULL,
  samps = NULL,
  sfreq = NULL,
  bads = NULL
)
}
\arguments{
\item{col_names}{character vector of names of data columns}

\item{col_types}{character vector of data types. Defaults to "misc".}

\item{device_type}{device type that collected the data}

\item{device_model}{device model}

\item{device_serial}{device serial identifier}

\item{device_site}{device site}

\item{device_info}{device information as a list}

\item{subj_id}{subject identifier}

\item{subj_sex}{subject sex}

\item{subj_age}{subject age}

\item{subj_height}{subject height}

\item{subj_weight}{subject weight}

\item{subj_info}{subject information as a list}

\item{desc}{measurement description}

\item{meas_date}{datetime of the measurement}

\item{meas_id}{measurement id}

\item{meas_start}{time to use as the start of the testing}

\item{samps}{name of column containing sample numbers}

\item{sfreq}{sampling frequency in Hz}

\item{bads}{list of channels that have bad signal}
}
\value{
info
}
\description{
create `info` object to record measurement metadata. This object behaves
like a list. It contains all metadata available for the measurement.
}
\details{
Implementation is based on the info class for MNE python.

 `col_names`is the only required argument. `col_types` defaults to "misc"
for all cols without other input. If both `col_names` and `col_types` are
provided, the length of `col_names` must match the length of `col_types` if
`col_types` is longer than 1. If `col_types` is of length 1, then all cols
will be that type.
}
